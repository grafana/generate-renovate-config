version: "2"
linters:
  enable:
    - depguard
    - errorlint
    - gocritic
    - godot
    - loggercheck
    - misspell
    - nolintlint
    - predeclared
    - revive
    - sloglint
    - testifylint
    - unconvert
    - usestdlibvars
    - whitespace
  settings:
    depguard:
      rules:
        main:
          deny:
            - pkg: io/ioutil
              desc: Use corresponding 'os' or 'io' functions instead.
            - pkg: github.com/pkg/errors
              desc: Use 'errors' or 'fmt' instead of github.com/pkg/errors
            - pkg: golang.org/x/exp/slices
              desc: Use 'slices' instead.
    revive:
      rules:
        - name: blank-imports
        - name: comment-spacings
        - name: context-as-argument
          arguments:
            - allowTypesBefore: '*testing.T,testing.TB'
        - name: context-keys-type
        - name: dot-imports
        - name: empty-block
          disabled: true
        - name: error-naming
        - name: error-return
        - name: error-strings
        - name: errorf
        - name: exported
        - name: increment-decrement
        - name: indent-error-flow
        - name: package-comments
          disabled: true
        - name: range
        - name: receiver-naming
        - name: redefines-builtin-id
        - name: superfluous-else
        - name: time-naming
        - name: unexported-return
        - name: unreachable-code
        - name: unused-parameter
          disabled: true
        - name: var-declaration
        - name: var-naming
    testifylint:
      enable-all: true
      disable:
        - float-compare
        - go-require
  exclusions:
    generated: lax
    rules:
      - linters:
          - errcheck
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
      - linters:
          - revive
        text: exported (.+) should have comment( \(or a comment on this block\))? or be unexported
      - linters:
          - errcheck
        path: _test.go
      - linters:
          - godot
        source: ^// ===
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gofumpt
    - goimports
  settings:
    gofumpt:
      extra-rules: true
    goimports:
      local-prefixes:
        - github.com/grafana/generate-renovate-config
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
